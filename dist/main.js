let getRandomWord=async()=>await(await fetch("http://localhost:5000/getRandomWord")).text(),validateWord=async e=>await(await fetch("http://localhost:5000/validateWord?word="+e)).json(),highlightBox=()=>{for(let t=0;t<columns;t++){let e=getBox(activeCell[0],t);e.classList.remove("now")}let e=getBox(...activeCell);e.classList.add("now")},summaryRow=t=>{var r=activeCell[0];let a=!0;for(let e=0;e<columns;e++){var o=getBox(r,e);o.classList.add(t[e]),o.classList.remove("now"),"match"!==t[e]&&(a=!1)}return a?"win":r===rows-1?"gameover":(activeCell=[r+1,0],highlightBox(),guess=new Array(columns).fill(void 0),"continue")},messagePlayer=(e,t="normal")=>{cLine.classList.remove("error-message"),cLine.classList.remove("win-message"),"error"===t&&cLine.classList.add("error-message"),"win"===t&&cLine.classList.add("win-message"),cLine.innerText=e},normalKey=t=>()=>{var e;keyboardOff||(e=activeCell[1],void 0===guess[e]&&(getBox(activeCell[0],e).innerText=t,guess[e]=t,e!==columns-1&&(activeCell[1]+=1),highlightBox(),console.log(guess)))},eraseKey=()=>{if(!keyboardOff){var t=activeCell[1];if(0!==t){let e;void 0!==guess[t]?(e=getBox(...activeCell),guess[t]=void 0):(e=getBox(activeCell[0],t-1),guess[t-1]=void 0,--activeCell[1]),e.innerText="",highlightBox(),console.log(guess)}}},submitKey=async()=>{var e;keyboardOff||(void 0===guess[columns-1]?messagePlayer("Введіть усі літери","error"):(e=deArraify(guess),await validateWord(e)?(e=wordCompare(e,wordleAnswer),"win"===(e=summaryRow(e))?(messagePlayer("Вітаємо, ви перемогли!","win"),keyboardOff=!0):"gameover"===e&&(messagePlayer("Ви програли, спробуйте знову!","error"),keyboardOff=!0)):messagePlayer("Введіть слово з української мови","error")))},arraify=e=>"object"==typeof e?e:e.split(""),deArraify=e=>"string"==typeof e?e:e.join(""),getBox=(e,t)=>document.getElementById("box"+e.toString()+"-"+t.toString()),memoize=(i,s)=>{let n=new Map;return(...e)=>{var t=e.join(",");if(n.has(t))return o=n.get(t),n.set(t,[o[0],o[1]+1]),o[0];if(n.size>=s){let e,t=1/0;for(var[r,a]of n.entries())a[1]<t&&(t=a[1],e=r);n.delete(e)}var o=i(...e);return n.set(t,[o,1]),o}},logDecorator=(o,i=console.log)=>{let s=o.name;return(e,...t)=>{var r="DEBUG"===e,e="INFO"===e||r;e&&i("Function "+s+" activated"),r&&i("Arguments inserted in "+s+": "+t.join(", "));try{var a=o(...t);return e&&i("Function "+s+" finished successfully"),r&&i("Result of "+s+": "+a.toString()),a}catch(e){throw i("Function "+s+"finished with error:"+e.toString()),e}}},columns=5,rows=6,gamefield=document.getElementById("gamefield"),cLine=document.getElementById("communication-line"),keyboardOff=!1;for(let a=0;a<rows;a++){let r=document.createElement("div");r.classList.add("row"),r.id="row"+a.toString();for(let t=0;t<columns;t++){let e=document.createElement("div");e.classList.add("letter-box"),e.id="box"+a.toString()+"-"+t.toString(),r.appendChild(e)}gamefield.appendChild(r)}let activeCell=[0,0],guess=new Array(columns).fill(void 0),wordleAnswer="",testasync=async()=>{wordleAnswer=await getRandomWord()},keyrowArray0=(testasync(),highlightBox(),["й","ц","у","к","е","н","г","ш","щ","з","х","ї"]),keyrowArray1=["ф","і","в","а","п","р","о","л","д","ж","є","←"],keyrowArray2=["'","я","ч","с","м","и","т","ь","б","ю","ґ","✔"],keyrow0=document.getElementById("keyrow-0"),keyrow1=(keyrowArray0.forEach(e=>{var t=document.createElement("div");t.classList.add("keyboard-box"),t.innerText=e,t.id="keybox-"+e,keyrow0.appendChild(t),t.addEventListener("click",normalKey(e))}),document.getElementById("keyrow-1")),keyrow2=(keyrowArray1.forEach(e=>{var t=document.createElement("div");t.classList.add("keyboard-box"),t.innerText=e,t.id="keybox-"+e,keyrow1.appendChild(t),"←"===e?t.addEventListener("click",eraseKey):t.addEventListener("click",normalKey(e))}),document.getElementById("keyrow-2")),wordCompare=(keyrowArray2.forEach(e=>{var t=document.createElement("div");t.classList.add("keyboard-box"),t.innerText=e,t.id="keybox-"+e,keyrow2.appendChild(t),"✔"===e?t.addEventListener("click",submitKey):t.addEventListener("click",normalKey(e))}),(e,t)=>{var r,a,o,i=arraify(e),s=arraify(t),n=[];for(r in i)i.at(r)===s.at(r)&&(n.push({match:r}),s.splice(r,1,null),i.splice(r,1,""));for(a in i)s.includes(i.at(a))&&(n.push({here:a}),s.splice(s.indexOf(i.at(a)),1,null),i.splice(a,1,""));for(o in i)""!==i.at(o)&&n.push({miss:o});return n.sort((e,t)=>Object.values(e)-Object.values(t)),n.map(e=>Object.keys(e)[0])});